env:
  global:
    - SHARED=OFF
    - COMMAND_EVAL=""

matrix:
  allow_failures:
    - os: linux
      dist: xenial

  include:
    - os: linux
      dist: trusty
      sudo: true
      language: python
      python: "2.7"
      addons:
        apt:
          sources:
            - kalakris-cmake # CMake 3

    - os: linux
      dist: trusty
      sudo: true
      language: python
      python: "3.6"
      env:
        - SHARED=ON
        - COMMAND_EVAL="export CC=gcc-6 && export CXX=g++-6 && alias gcc='gcc-6' && alias g++='g++-6'"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test #GCC 6
            - kalakris-cmake # CMake 3
          packages:
            - gcc-6
            - g++-6

    - os: linux
      dist: xenial
      sudo: true
      language: python
      python: "3.6"
      env:
        - SHARED=ON
        - COMMAND_EVAL="sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && sudo apt-get update && sudo apt-get install -y gcc-6 g++-6 && export CC=gcc-6 && export CXX=g++-6 && alias gcc='gcc-6' && alias g++='g++-6'"

    - os: osx
      osx_image: xcode7.3
      language: cpp
      compiler: clang

    - os: osx
      osx_image: xcode9.3
      language: cpp
      compiler: clang
      env:
        - SHARED=ON


before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo rm -f /var/lib/dpkg/lock;
      sudo apt-get -qq update;
      echo $COMMAND_EVAL;
      eval $COMMAND_EVAL;
      sudo apt-get install -y cmake xorg-dev libglu1-mesa-dev libgl1-mesa-glx libglew-dev libjsoncpp-dev libeigen3-dev;
      sudo apt-get install -y doxygen python-sphinx pandoc;
      python -m pip install --upgrade pip sphinx sphinx-autobuild sphinx-rtd-theme wheel pytest numpy pypandoc;
      uname -a && gcc --version && cmake --version && python -V;
    else
      brew update;
      echo $COMMAND_EVAL;
      eval $COMMAND_EVAL;
      brew install cmake libusb pkg-config glfw glew libpng jpeg pkg-config jsoncpp eigen;
      brew install doxygen sphinx-doc pandoc;
      export PATH="/usr/local/opt/sphinx-doc/bin:$PATH";
      sudo python -m ensurepip --upgrade;
      python -m pip install --user --upgrade pip sphinx sphinx-autobuild sphinx-rtd-theme wheel pytest numpy pypandoc;
      uname -a && clang --version && cmake --version && python -V;
    fi

install:
  - cd doc && doxygen Doxyfile && cd ..
  - cd doc && sphinx-build -b html . _build/docs && cd ..
  - mkdir build && cd build && mkdir install
  - cmake -DPYBIND11_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION -DBUILD_SHARED_LIBS:BOOL=$SHARED -DCMAKE_INSTALL_PREFIX=install ..
  - make

script:
  - cd bin/Test && ./TestImage ../../../data/RGBD/color/00000.jpg ../../../data/RGBD/depth/00000.png && cd ../..
  - cd bin/Test && ./TestPoseGraph ../../../data/GraphOptimization/pose_graph_example_fragment.json && cd ../..
  - cd bin/Test && ./TestProgramOptions --switch --int 123 --double 456.789 --string "Hello World" --vector "(0,0,1)" && cd ../..
  - cd ../util/package_generator/ && python setup.py --base-dir ../../build bdist_wheel && cd ../../build

after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      uname -a && gcc --version && cmake --version && python -V;
    else
      uname -a && clang --version && cmake --version && python -V;
    fi
  - echo $TRAVIS_OS_NAME && echo $TRAVIS_PYTHON_VERSION && echo $SHARED
  - find . -type f \( -name "*.a" -o -name "*.so" -o -name "*.dylib" \)

# deploy:
# after_script:
