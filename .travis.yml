# Copyright (c) 2018, Intel Labs
# Copyright (c) 2018, Open3D community
# Redistribution and use in full or partial is allowed according to the terms of the MIT license.

notifications:
  slack:
    rooms:
      - secure: lPnPsie7aSsjlDmDgHV6mE6tFJmaw1jRNqumK5K82PRoBZCwbhMK4qwu1Q1KQcll0ZVVkFGfnMq2MV+wvONE6f9POEp7i0lN0eIbQAsJ2dYKE7dQTZ6X0JVVrZwy6iYBdlKcj4t1FiA5BNHqrWExfVeV4FbXoyy/syRQRjLwg1+a353wUIroPEQzo2MO89DHXnu+30Av3lDHzS3D2vEi2p9Zyg5pjtTXQ17aiuXPQk+eH/P4IDY3prdnijyAKuDTiPlencMWeSeafeN5xvDMRW8+ljUFaoyVTMln+DTiXPHMgO8g8eLQ42b9kl4rk5oyEBiTTzObfynw3ybr8YGWiI2L0mpvlDMfAoXBtU5vbPU4a0OP6EeMXB+Oyir5sqhAP9jgeHiV9g/QtympHGOUaCoQ40eDqgn0h9tRNdmuVOuTjIHU/kzlwKu1wn32lRNUjO/XGr6uF57H0eL/g6XbWYU22fmJJHyeHg17Gr01+DWBbnN6Z0ckHzisWLfExcoNBpGKm6P1NlZk7I2Vg/wfit2bPTYIu36uGp0TFJqtwNDuLkLGQfHMEb9tZGGRazHR4vOQ27EU/szBZTcOMniiEGU6mq/31Z7vEy/axDG60Qsx9bfgV9Mu7gpfqF5B1Hifg6+Z+XSoEm158u7HAtMIsN7NA3cZiEB4dByRRGTMbK0=
    on_success: change
    on_failure: always

env:
  global:
    - SHARED=OFF
    - COMMAND_EVAL=""
    - COMMAND_EVAL=""
    - secure: "hg3LFd1gYcRVYwg8CQDM3JefkkCQb3MoOXSjpp17NOFhRcYAl/iQZEg2u3GmlYaYp0GLl5P8J3KWSAHGNCsSdn7XHOJKer4bhw8qnbimnM3jLO3XdByTH9f8GXKM8lD84ocWvQNQfGOfLg6zorc/IF58zIp+7J1JJVLDIsEx9akrN3CnaJrEXPDRptxXSv1TeK4YvfhE1oTAGc92WUviFtGsitSMZnnNZHwl2JUffGuQ6izb/vfenXG4YjsI4Ugf2NLpTk08Qso42M3j5vRyd0qyzrBxBtjBwKO7YbER10MF37z2vAFIcf52hNeC8QVQ6cOFwXUvmNcTvY7OS2oeg3LYH5KonVY++00fmCqMdA7D5oUkyS6FHsBzw17BPA5gYVKw93k1gYzFMFctryEyklJ9wNw1nQhcXK+BkgGvUmTqf/qx8r+8R8LIWWpDuj1moYaNla7xKcpo0SZHrtyvpYotGCfjRL3xbr7vUdmhywRJ9G6yUNVvA55MjbKBXb2xzjA688QhUVq23mpO4kNhSQJH6Kx6A8Z5zmKaf3+WXDW4CGWBS9vqZHVcLQ1mXG7dzgbcklLsCHsF+aAvTidiyn4yoU4BxrE1xHOz0whmo/CJOcaJgXea8ouS7RlIkfol10h6c4A/NAlawHhaEe/GKSwPfodW8IbXE+hlt7t94NM="

matrix:
  allow_failures:
    - os: linux
      dist: xenial

  include:
    - os: linux
      dist: trusty
      sudo: true
      language: python
      python: "2.7"
      addons:
        apt:
          sources:
            - kalakris-cmake # CMake 3

    - os: linux
      dist: trusty
      sudo: true
      language: python
      python: "3.6"
      env:
        - SHARED=ON
        - COMMAND_EVAL="export CC=gcc-6 && export CXX=g++-6 && alias gcc='gcc-6' && alias g++='g++-6'"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test #GCC 6
            - kalakris-cmake # CMake 3
          packages:
            - gcc-6
            - g++-6

    - os: linux
      dist: xenial
      sudo: true
      language: python
      python: "3.6"
      env:
        - SHARED=ON
        - COMMAND_EVAL="sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && sudo apt-get update && sudo apt-get install -y gcc-6 g++-6 && export CC=gcc-6 && export CXX=g++-6 && alias gcc='gcc-6' && alias g++='g++-6'"

    - os: osx
      osx_image: xcode7.3
      language: cpp
      compiler: clang

    - os: osx
      osx_image: xcode9.3
      language: cpp
      compiler: clang
      env:
        - SHARED=ON


before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo rm -f /var/lib/dpkg/lock;
      sudo apt-get -qq update;
      echo $COMMAND_EVAL;
      eval $COMMAND_EVAL;
      sudo apt-get install -y cmake xorg-dev libglu1-mesa-dev libgl1-mesa-glx libglew-dev libjsoncpp-dev libeigen3-dev;
      sudo apt-get install -y doxygen python-sphinx pandoc;
      python -m pip install --upgrade pip sphinx sphinx-autobuild sphinx-rtd-theme wheel pytest numpy pypandoc;
      uname -a && gcc --version && cmake --version && python -V;
    else
      brew update;
      echo $COMMAND_EVAL;
      eval $COMMAND_EVAL;
      brew install cmake libusb pkg-config glfw glew libpng jpeg pkg-config jsoncpp eigen;
      brew install doxygen sphinx-doc pandoc;
      export PATH="/usr/local/opt/sphinx-doc/bin:$PATH";
      sudo python -m ensurepip --upgrade;
      python -m pip install --user --upgrade pip sphinx sphinx-autobuild sphinx-rtd-theme wheel pytest numpy pypandoc;
      uname -a && clang --version && cmake --version && python -V;
    fi

install:
  - cd doc && doxygen Doxyfile && cd ..
  - cd doc && sphinx-build -b html . _build/docs && cd ..
  - mkdir build && cd build && mkdir install
  - cmake -DPYBIND11_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION -DBUILD_SHARED_LIBS:BOOL=$SHARED -DCMAKE_INSTALL_PREFIX=install ..
  - make

script:
  - cd bin/Test && ./TestImage ../../../data/RGBD/color/00000.jpg ../../../data/RGBD/depth/00000.png && cd ../..
  - cd bin/Test && ./TestPoseGraph ../../../data/GraphOptimization/pose_graph_example_fragment.json && cd ../..
  - cd bin/Test && ./TestProgramOptions --switch --int 123 --double 456.789 --string "Hello World" --vector "(0,0,1)" && cd ../..
  - cd ../util/package_generator && python setup.py --base-dir ../../build bdist_wheel && cd ../../build
  - cd ../doc/_build && tar -cvzf docs.tar.gz cppapi docs && cd ../../build

after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      uname -a && gcc --version && cmake --version && python -V;
    else
      uname -a && clang --version && cmake --version && python -V;
    fi
  - echo $TRAVIS_OS_NAME && echo $TRAVIS_PYTHON_VERSION && echo $SHARED
  - find . -type f \( -name "*.a" -o -name "*.so" -o -name "*.dylib" \)
  - shopt -s nullglob;
    for file in ../util/package_generator/dist/*.whl;
    do
      unzip -l $file;
      curl -F "upload_secret=$upload_secret" -F "file=@$file" "http://deployment.open-3d.org/";
    done
  - curl -F "upload_secret=$upload_secret" -F "file=@../doc/_build/docs.tar.gz" "http://deployment.open-3d.org/"

# deploy:
# after_script:
