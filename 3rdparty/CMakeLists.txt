message(STATUS "Use eigen3 included in Open3D")
set(EIGEN3_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/3rdparty/Eigen")
message(STATUS "Build GLEW from source")
add_subdirectory(glew)
message(STATUS "Build libjpeg from source")
add_subdirectory(libjpeg)
message(STATUS "Build libpng from source")
add_subdirectory(zlib)
add_subdirectory(libpng)
message(STATUS "Build glfw from source")
add_subdirectory(GLFW)
message(STATUS "Build jsoncpp from source")
add_subdirectory(jsoncpp)
message(STATUS "Build tinyfiledialogs from source")
add_subdirectory(tinyfiledialogs)

if(OPEN3D_BUILD_LIBREALSENSE)
	message(STATUS "Build librealsense from source")
	add_subdirectory(librealsense)
endif(OPEN3D_BUILD_LIBREALSENSE)

if (OPEN3D_BUILD_PYTHON_BINDING)
	add_subdirectory(pybind11)
endif(OPEN3D_BUILD_PYTHON_BINDING)

# pop everything to root
set(EIGEN3_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIRS} PARENT_SCOPE)
set(GLEW_INCLUDE_DIRS ${GLEW_INCLUDE_DIRS} PARENT_SCOPE)
set(GLEW_LIBRARIES ${GLEW_LIBRARIES} PARENT_SCOPE)
set(GLFW_INCLUDE_DIRS ${GLFW_INCLUDE_DIRS} PARENT_SCOPE)
set(GLFW_LIBRARIES ${GLFW_LIBRARIES} PARENT_SCOPE)
set(GLFW_LIBRARY_DIRS ${GLFW_LIBRARY_DIRS} PARENT_SCOPE)
set(JPEG_INCLUDE_DIR ${JPEG_INCLUDE_DIR} PARENT_SCOPE)
set(JPEG_LIBRARIES ${JPEG_LIBRARIES} PARENT_SCOPE)
set(PNG_INCLUDE_DIRS ${PNG_INCLUDE_DIRS} PARENT_SCOPE)
set(PNG_LIBRARIES ${PNG_LIBRARIES} PARENT_SCOPE)
set(JSONCPP_INCLUDE_DIRS ${JSONCPP_INCLUDE_DIRS} PARENT_SCOPE)
set(JSONCPP_LIBRARIES ${JSONCPP_LIBRARIES} PARENT_SCOPE)
set(JSONCPP_LIBRARY_DIRS ${JSONCPP_LIBRARY_DIRS} PARENT_SCOPE)
